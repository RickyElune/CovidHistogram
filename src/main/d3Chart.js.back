var data = require("./JeanData.json");

function drawChart(container) {
    const chartWidth = 400;
    const chartHeight = 400;

    var bins = d3.bin().thresholds(40)(data);

    var margin = { top: 20, right: 20, bottom: 30, left: 40 };

    var x = d3
        .scaleLinear()
        .domain([bins[0].x0, bins[bins.length - 1].x1])
        .range([margin.left, width - margin.right]);

    var y = d3
        .scaleLinear()
        .domain([0, d3.max(bins, (d) => d.length)])
        .nice()
        .range([height - margin.bottom, margin.top]);

    var xAxis = (g) =>
        g
            .attr("transform", `translate(0,${height - margin.bottom})`)
            .call(
                d3
                    .axisBottom(x)
                    .ticks(width / 80)
                    .tickSizeOuter(0)
            )
            .call((g) =>
                g
                    .append("text")
                    .attr("x", width - margin.right)
                    .attr("y", -4)
                    .attr("fill", "currentColor")
                    .attr("font-weight", "bold")
                    .attr("text-anchor", "end")
                    .text(data.x)
            );

    var yAxis = (g) =>
        g
            .attr("transform", `translate(${margin.left},0)`)
            .call(d3.axisLeft(y).ticks(height / 40))
            .call((g) => g.select(".domain").remove())
            .call((g) =>
                g
                    .select(".tick:last-of-type text")
                    .clone()
                    .attr("x", 4)
                    .attr("text-anchor", "start")
                    .attr("font-weight", "bold")
                    .text(data.y)
            );

    const svg = d3
        .select(container)
        .append("svg")
        .attr("viewBox", [0, 0, chartWidth, chartHeight]);

    svg.append("g")
        .attr("fill", "steelblue")
        .selectAll("rect")
        .data(bins)
        .join("rect")
        .attr("x", (d) => x(d.x0) + 1)
        .attr("width", (d) => Math.max(0, x(d.x1) - x(d.x0) - 1))
        .attr("y", (d) => y(d.length))
        .attr("height", (d) => y(0) - y(d.length));

    svg.append("g").call(xAxis);

    svg.append("g").call(yAxis);
}

export default drawChart;
